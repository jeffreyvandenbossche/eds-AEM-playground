{"version":3,"file":"experience-zone.js","sourceRoot":"","sources":["../../../../src/components/molecules/experience-zone/experience-zone.tsx"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAChE,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,MAAM,+BAA+B,CAAC;AAEvE,OAAO,EAAkB,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/E;;GAEG;AAMH,MAAM,OAAO,sBAAsB;;kBAEN,KAAK;uBAED,CAAC;;;;EAShC,IAAI,wBAAwB;IAC1B,OAAO,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;EAChD,CAAC;EAQD,IAAI,iBAAiB;IACnB,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;EACzC,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,iBAAiB;QAC1B,gBACE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EACjC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAC/B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EACjC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EACvC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,GACnC;QACF,qBACG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC,CAC3D,uBACE,IAAI,EAAC,4BAA4B,EACjC,KAAK,EAAC,MAAM,EACZ,IAAI,EAAC,aAAa,EAClB,QAAQ,EAAC,mBAAmB,EAC5B,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE;UAE1E,+BACE,KAAK,EAAC,aAAa,EACnB,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAC5D,SAAS,EAAE,KAAK,CAAC,UAAU,EAC3B,SAAS,EAAE,KAAK,CAAC,UAAU,EAC3B,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,oBAAoB,CAAC,KAAK,GAC7D,CACc,CACnB,CAAC,CACQ,CACR,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF;AAhDC;EADC,OAAO,CAAC,oBAAoB,CAAC;sEAG7B;AAQD;EADC,OAAO,CAAC,aAAa,CAAC;+DAGtB","sourcesContent":["import { Component, Host, h, Prop, State } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsTitle } from '../../atoms/title/title';\nimport { ExperienceZone, ExperienceZoneLayout } from './experience-zone.types';\n\n/**\n * Experience Zone teaser component.\n */\n@Component({\n  tag: 'bs-experience-zone',\n  styleUrl: 'experience-zone.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneTeaser {\n  /** States */\n  @State() slides: boolean = false;\n\n  @State() activeIndex: number = 0;\n\n  /** Props */\n  /**\n   * The Experience Zone contract.\n   */\n  @Prop() experienceZoneData: ExperienceZone | string;\n\n  @Memoize('experienceZoneData')\n  get parsedExperienceZoneData(): ExperienceZone {\n    return parseIfString(this.experienceZoneData);\n  }\n\n  /**\n   * The Experience Zone Teaser title.\n   */\n  @Prop() teaserTitle: BsTitle | string;\n\n  @Memoize('teaserTitle')\n  get parsedTeaserTitle(): BsTitle {\n    return parseIfString(this.teaserTitle);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone\">\n          <bs-title\n            text={this.parsedTeaserTitle.text}\n            tag={this.parsedTeaserTitle.tag}\n            size={this.parsedTeaserTitle.size}\n            variant={this.parsedTeaserTitle.variant}\n            color={this.parsedTeaserTitle.color}\n          />\n          <bs-slider>\n            {this.parsedExperienceZoneData.stories.map((story, index) => (\n              <bs-click-action\n                name=\"open-experience-zone-modal\"\n                class=\"grow\"\n                slot=\"slider-item\"\n                tagClass=\"grow click-action\"\n                value={{ activeIndex: index, experienceZoneData: this.experienceZoneData }}\n              >\n                <bs-experience-zone-card\n                  class=\"teaser-card\"\n                  singular={this.parsedExperienceZoneData.stories.length === 1}\n                  cardTitle={story.storyTitle}\n                  cardImage={story.storyImage}\n                  video={story.screens[0].layout === ExperienceZoneLayout.Video}\n                />\n              </bs-click-action>\n            ))}\n          </bs-slider>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}