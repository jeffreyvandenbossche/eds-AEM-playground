{"version":3,"names":["KeyboardCodes","formSelectCss","BsFormSelect","this","customOptions","focus","focused","selectWrap","addEventListener","handleKeyDown","querySelector","setAttribute","i","selectElRef","childNodes","length","selected","activeOption","focusOut","removeEventListener","undefined","e","code","Enter","handleSelect","ArrowDown","handleOptionfocus","ArrowUp","Escape","validateValue","newValue","oldValue","parsedOptions","options","querySelectorAll","ariaDisabled","parseIfString","handleFocusOut","target","nodeName","direction","nativeSelect","selectedIndex","Number","dataset","index","disabled","click","value","formFieldRef","_a","filled","handleSelectedProp","bind","componentDidRender","document","componentDidLoad","forEach","option","hostElement","disconnectedCallback","render","h","Host","ref","el","name","invalid","required","requiredMessage","label","icon","slot","id","class","onFocus","onClick","tabIndex","_b","text","map","role","push","tabindex","htmlFor","title","__decorate","Memoize"],"sources":["./src/components/molecules/form-select/form-select.types.ts","./src/components/molecules/form-select/form-select.scss?tag=bs-form-select&encapsulation=shadow","./src/components/molecules/form-select/form-select.tsx"],"sourcesContent":["export type SelectOption = {\n  value: string;\n  text: string;\n  selected?: boolean;\n  disabled?: boolean;\n};\n\nexport enum KeyboardCodes {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  Escape = 'Escape',\n  Enter = 'Enter',\n}\n\nexport type AttributeItem = {\n  key: string;\n  value: string;\n};\n",":host {\n  @include reset-host;\n}\n\n:host .custom-select {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  padding: rem(24) rem(24) 0;\n  text-align: left;\n  cursor: pointer;\n  background: unset;\n  border: 0;\n\n  &:focus {\n    outline: 2px solid #{$red-300};\n    outline-offset: 3px;\n  }\n}\n\n:host .custom-options-wrapper {\n  position: absolute;\n  top: calc(100% + 1px);\n  left: 0;\n  width: 100%;\n  max-height: 0;\n  overflow: auto;\n  box-shadow: 0 rem(2) rem(5) $gray-700;\n  transition: max-height 0.5s ease;\n  @include z-index('modal');\n}\n\n:host .custom-option {\n  display: flex;\n  align-items: center;\n  min-height: rem(48);\n  padding-left: rem(24);\n  cursor: pointer;\n  background-color: $white;\n  border-bottom: 1px solid $gray-800;\n\n  &:hover {\n    background-color: $gray-900;\n    outline: none;\n  }\n\n  &:focus {\n    background-color: $gray-800;\n    outline: none;\n  }\n\n  &.is-disabled {\n    color: $gray-800;\n    cursor: not-allowed;\n    background-color: $white;\n  }\n}\n\n:host([focused]) .custom-options-wrapper {\n  max-height: rem(200);\n}\n\n.hidden {\n  display: none;\n}\n\n:host-context(html[dir='rtl']) {\n  .custom-select {\n    text-align: right;\n  }\n\n  .custom-option {\n    padding-right: rem(24);\n    padding-left: 0;\n  }\n}\n","import { Component, Element, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { IconName } from '../../../components';\nimport { KeyboardCodes, SelectOption } from './form-select.types';\n\n/**\n * The form select component.\n */\n@Component({\n  tag: 'bs-form-select',\n  styleUrl: 'form-select.scss',\n  shadow: true,\n})\nexport class BsFormSelect {\n  @Element() hostElement: HTMLBsFormSelectElement;\n\n  private formFieldRef: HTMLBsFormFieldElement;\n\n  private selectElRef: HTMLSelectElement;\n\n  private selectWrap: HTMLButtonElement;\n\n  private customOptions: HTMLLIElement[] = [];\n\n  /**\n   * The value of the form field\n   */\n  @State() value?: SelectOption;\n\n  /**\n   * Wether or not the input field is filled\n   */\n  @State() filled: boolean = false;\n\n  /**\n   * Wether or not the input field is focused\n   */\n  @State() focused: boolean = false;\n\n  /**\n   * Wether or not the input field is invalid\n   */\n  @State() invalid: boolean = false;\n\n  /**\n   * Wether or not the input field is invalid\n   */\n  @State() activeOption: number | undefined = undefined;\n\n  @Watch('activeOption')\n  validateValue(newValue: number, oldValue: number) {\n    if (typeof newValue === 'undefined') return;\n\n    if (newValue > oldValue) {\n      this.activeOption = newValue >= this.parsedOptions.length ? 0 : newValue;\n    } else if (newValue < oldValue) {\n      this.activeOption = newValue < 0 ? this.parsedOptions.length - 1 : newValue;\n    } else {\n      this.activeOption = newValue;\n    }\n\n    const options = this.selectWrap.querySelectorAll('.custom-option') as NodeListOf<HTMLLIElement>;\n\n    while (options[this.activeOption].ariaDisabled === 'true') {\n      this.activeOption += 1;\n    }\n\n    options[this.activeOption].focus();\n  }\n\n  /**\n   * The unique name to identify the form element\n   */\n  @Prop() name!: string;\n\n  /**\n   * The label describing the form field\n   */\n  @Prop() label!: string;\n\n  /**\n   * The list of options that will populate the select field.\n   */\n  @Prop() options: SelectOption[] | string;\n\n  @Memoize('options')\n  get parsedOptions(): SelectOption[] {\n    return parseIfString(this.options);\n  }\n\n  /**\n   * Wether or not the input field is required\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * The error message to be displayed when the required field remains empty\n   */\n  @Prop() requiredMessage: string;\n\n  /**\n   * The icon to be displayed on the right hand side of the form field\n   */\n  @Prop() icon?: IconName;\n\n  private focus = () => {\n    this.focused = true;\n    this.selectWrap.addEventListener('keydown', this.handleKeyDown, true);\n    this.selectWrap.querySelector('.custom-options-wrapper').setAttribute('aria-expanded', 'true');\n\n    for (let i = 0; i < this.selectElRef.childNodes.length; i += 1) {\n      if ((this.selectElRef.childNodes[i] as HTMLOptionElement).selected) {\n        this.activeOption = i;\n      }\n    }\n  };\n\n  private focusOut = () => {\n    this.focused = false;\n    this.selectWrap.removeEventListener('keydown', this.handleKeyDown, true);\n    this.selectWrap.querySelector('.custom-options-wrapper').setAttribute('aria-expanded', 'false');\n    this.activeOption = undefined;\n  };\n\n  private handleFocusOut(e: MouseEvent) {\n    if ((e.target as HTMLElement).nodeName !== 'BS-FORM-SELECT') {\n      this.focused = false;\n    }\n  }\n\n  private handleOptionfocus(direction: KeyboardCodes.ArrowUp | KeyboardCodes.ArrowDown) {\n    if (direction === KeyboardCodes.ArrowDown) {\n      this.activeOption += 1;\n    } else if (direction === KeyboardCodes.ArrowUp) {\n      this.activeOption -= 1;\n    }\n  }\n\n  private handleKeyDown = (e: KeyboardEvent) => {\n    switch (e.code) {\n      case KeyboardCodes.Enter:\n        this.handleSelect(e);\n        this.focusOut();\n        break;\n\n      case KeyboardCodes.ArrowDown:\n        this.handleOptionfocus(KeyboardCodes.ArrowDown);\n        break;\n\n      case KeyboardCodes.ArrowUp:\n        this.handleOptionfocus(KeyboardCodes.ArrowUp);\n        break;\n\n      case KeyboardCodes.Escape:\n        this.focusOut();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  private handleSelect(e: PointerEvent | KeyboardEvent) {\n    const nativeSelect = this.selectElRef;\n    const selected = e.target as HTMLLIElement;\n    const selectedIndex = Number(selected.dataset.index) || 0;\n\n    if (nativeSelect.options[selectedIndex].disabled) return;\n    nativeSelect.selectedIndex = selectedIndex;\n    nativeSelect.options[selectedIndex].click();\n    this.value = nativeSelect.options[selectedIndex];\n    this.formFieldRef.value = this.value?.value;\n    this.focusOut();\n    this.filled = true;\n  }\n\n  private handleSelectedProp() {\n    for (let i = 0; i < this.selectElRef.options.length; i += 1) {\n      this.selectElRef.options[i].addEventListener('click', this.handleSelect.bind(this));\n\n      if (this.selectElRef.options[i].selected) {\n        this.selectElRef.options[i].click();\n      }\n    }\n  }\n\n  componentDidRender() {\n    document.addEventListener('click', this.handleFocusOut.bind(this));\n  }\n\n  componentDidLoad() {\n    this.customOptions.forEach((option) => {\n      option.addEventListener('click', this.handleSelect.bind(this));\n    });\n    this.hostElement.addEventListener('focusout', this.focusOut.bind(this));\n\n    this.handleSelectedProp();\n  }\n\n  disconnectedCallback() {\n    document.removeEventListener('click', this.handleFocusOut.bind(this));\n    this.hostElement.removeEventListener('focusout', this.focusOut.bind(this));\n  }\n\n  render() {\n    return (\n      <Host focused={this.focused}>\n        <bs-form-field\n          ref={(el) => {\n            this.formFieldRef = el;\n          }}\n          value={this.value?.value}\n          name={this.name}\n          focused={this.focused || this.filled}\n          filled={this.filled}\n          invalid={this.invalid}\n          required={this.required}\n          requiredMessage={this.requiredMessage}\n          label={this.label}\n          icon={this.icon}\n        >\n          <button\n            slot=\"form-element\"\n            ref={(el) => {\n              this.selectWrap = el;\n            }}\n            id={this.name}\n            class=\"custom-select\"\n            onFocus={!this.focused ? this.focus : this.focusOut}\n            onClick={!this.focused && this.focus}\n            tabIndex={0}\n          >\n            <span class=\"custom-select-value\">{this.value?.text}</span>\n            <select\n              ref={(el: HTMLSelectElement) => {\n                this.selectElRef = el;\n\n                return this.selectElRef;\n              }}\n              class=\"hidden\"\n              required={this.required}\n              id={`hidden-${this.name}`}\n              name={this.name}\n              tabIndex={-1}\n            >\n              {this.parsedOptions.map((option, index) => (\n                <option\n                  selected={option.selected}\n                  aria-selected={option.selected}\n                  value={option.value}\n                  disabled={option.disabled}\n                  data-index={index}\n                >\n                  {option.text}\n                </option>\n              ))}\n            </select>\n            <div aria-labelledby={this.name}>\n              <ul\n                class=\"custom-options-wrapper\"\n                aria-haspopup=\"listbox\"\n                aria-expanded=\"false\"\n                role=\"group\"\n              >\n                {this.parsedOptions.map((option, index) => (\n                  <li\n                    ref={(el) => {\n                      this.customOptions.push(el);\n                    }}\n                    role=\"option\"\n                    class={`custom-option ${option.disabled ? 'is-disabled' : ''}`}\n                    tabindex={-1}\n                    aria-disabled={option.disabled ? 'true' : false}\n                    aria-selected={option.selected}\n                    data-index={index}\n                  >\n                    {option.text}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </button>\n          <label slot=\"form-label\" class=\"form-label\" htmlFor={this.name} title={this.label}>\n            {this.label}\n            {this.required ? <span aria-hidden=\"true\">&nbsp;*</span> : ''}\n          </label>\n        </bs-form-field>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"}