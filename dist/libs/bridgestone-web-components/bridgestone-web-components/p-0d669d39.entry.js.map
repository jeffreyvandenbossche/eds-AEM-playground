{"version":3,"names":["accordionCss","BsAccordion","parsedMainTitle","parseIfString","this","mainTitle","bsAccordionStateHandler","event","target","active","render","h","Host","class","isEmpty","text","variant","color","tag","size","name","__decorate","Memoize","accordionItemCss","BsAccordionItem","TitleTag","H3","TitleSize","Head3","validateIdentifier","newValue","isBlank","Error","bsAccordionStateActionHandler","state","bsAccordionStateAction","emit","itemIdentifier","identifier","replace","toLowerCase","expandable","type","toString","id","onClick","tabIndex","disabled","itemTag","itemSize","accordionItemTitle","IconName","CaretDownward","role","productCardCss","BsProductCard","parsedCardImage","cardImage","Object","assign","caption","Span","Head4","cardTitle","TitleColor","Black","cardText"],"sources":["./src/components/organisms/accordion/accordion.scss?tag=bs-accordion&encapsulation=shadow","./src/components/organisms/accordion/accordion.tsx","./src/components/molecules/accordion-item/accordion-item.scss?tag=bs-accordion-item&encapsulation=shadow","./src/components/molecules/accordion-item/accordion-item.tsx","./src/components/molecules/product-card/product-card.scss?tag=bs-product-card&encapsulation=shadow","./src/components/molecules/product-card/product-card.tsx"],"sourcesContent":[":host {\n  @include reset-host;\n}\n\n:host .accordion {\n  font-size: rem(20);\n  list-style: none;\n}\n","import { Memoize, isEmpty, parseIfString } from '@springbokagency/stencil-base';\nimport { Component, Host, h, Prop, Listen } from '@stencil/core';\nimport { BsTitle } from '../../atoms/title/title';\n\n/**\n * The Accordion component.\n */\n@Component({\n  tag: 'bs-accordion',\n  styleUrl: 'accordion.scss',\n  shadow: true,\n})\nexport class BsAccordion {\n  /**\n   * Section's title.\n   */\n  @Prop() mainTitle?: BsTitle | string;\n\n  @Memoize('mainTitle')\n  get parsedMainTitle(): BsTitle {\n    return parseIfString(this.mainTitle);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  @Listen('bsAccordionStateAction')\n  bsAccordionStateHandler(event: CustomEvent<boolean>) {\n    const target = event.target as HTMLBsAccordionItemElement;\n\n    target.active = !target.active;\n  }\n\n  render() {\n    return (\n      <Host>\n        <section class=\"accordion-wrapper\">\n          {/* Main title */}\n          {!isEmpty(this.parsedMainTitle) && !isEmpty(this.parsedMainTitle.text) && (\n            <bs-title\n              variant={this.parsedMainTitle.variant}\n              color={this.parsedMainTitle.color}\n              tag={this.parsedMainTitle.tag}\n              text={this.parsedMainTitle.text}\n              size={this.parsedMainTitle.size}\n            />\n          )}\n          <ul class=\"accordion\" aria-label=\"Accordion Control Group\">\n            <slot name=\"accordion-item\" />\n          </ul>\n        </section>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n  flex: 1;\n}\n\n:host .accordion-item {\n  margin-bottom: rem(-1);\n  list-style: none;\n  border-bottom: rem(1) solid $gray-800;\n\n  &.is-active .accordion-panel {\n    display: block;\n  }\n\n  &.is-active .accordion-trigger-icon {\n    transform: scaleY(-100%);\n  }\n}\n\n:host .accordion-trigger {\n  display: flex;\n  gap: rem(20);\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: rem(24) 0;\n  font: inherit;\n  line-height: line-height(default);\n  color: inherit;\n\n  text-align: left;\n  cursor: pointer;\n\n  background-color: transparent;\n  border: 0;\n\n  &:disabled {\n    pointer-events: none;\n    cursor: default;\n  }\n}\n\n:host .accordion-trigger-icon {\n  font-size: rem(24);\n}\n\n:host .accordion-panel {\n  display: none;\n}\n","import { Component, Event, EventEmitter, Host, Prop, Watch, h } from '@stencil/core';\n\nimport { IconName } from '../../atoms/icon/icon.types';\nimport { TitleSize, TitleTag } from '../../atoms/title/title.types';\n\n@Component({\n  tag: 'bs-accordion-item',\n  styleUrl: 'accordion-item.scss',\n  shadow: true,\n})\nexport class BsAccordionItem {\n  /**\n   * Accordion's unique identifier used for accessibility.\n   */\n  @Prop() identifier!: string;\n\n  // eslint-disable-next-line class-methods-use-this\n  @Watch('identifier')\n  validateIdentifier(newValue: string) {\n    // don't allow `thingToDo` to be the empty string\n    const isBlank = typeof newValue !== 'string' || newValue === '';\n\n    if (isBlank) {\n      throw new Error('BsAccordionItem identifier is a required property and cannot be empty');\n    }\n  }\n\n  /**\n   * Accordion's title.\n   */\n  @Prop() accordionItemTitle: string;\n\n  /**\n   * Accordion's active state\n   */\n  @Prop() active?: boolean;\n\n  /**\n   * Is the accordion expandable?\n   */\n  @Prop({ reflect: true }) expandable?: boolean = true;\n\n  /**\n   * To set the title tag\n   */\n  @Prop() itemTag: TitleTag = TitleTag.H3;\n\n  /**\n   * To set the title size\n   */\n  @Prop() itemSize: TitleSize = TitleSize.Head3;\n\n  /**\n   * Accordion's event emitter\n   */\n  @Event() bsAccordionStateAction: EventEmitter<Boolean>;\n\n  private bsAccordionStateActionHandler(state: Boolean) {\n    this.bsAccordionStateAction.emit(state);\n  }\n\n  render() {\n    const itemIdentifier = this.identifier.replace(/\\s+/g, '-').toLowerCase();\n\n    return (\n      <Host>\n        <li class={`accordion-item ${this.expandable && this.active ? 'is-active' : ''}`}>\n          {/* Button */}\n          <button\n            class=\"accordion-trigger\"\n            type=\"button\"\n            aria-controls={itemIdentifier}\n            aria-expanded={this.expandable && this.active && this.active.toString()}\n            id={`accordion-${itemIdentifier}`}\n            onClick={() => {\n              this.bsAccordionStateActionHandler(this.active);\n            }}\n            tabIndex={this.expandable ? 1 : -1}\n            disabled={!this.expandable}\n          >\n            <bs-title\n              tag={this.itemTag}\n              size={this.itemSize}\n              class=\"accordion-trigger-title\"\n              text={this.accordionItemTitle}\n            />\n\n            {this.expandable && (\n              <bs-icon\n                aria-hidden=\"true\"\n                class=\"accordion-trigger-icon\"\n                name={IconName.CaretDownward}\n              />\n            )}\n          </button>\n          {/* Content */}\n          <div\n            class=\"accordion-panel\"\n            role=\"region\"\n            aria-hidden={(!this.active).toString()}\n            id={itemIdentifier}\n          >\n            <div class=\"accordion-panel-content\">\n              <slot name=\"accordion-content\" />\n            </div>\n          </div>\n        </li>\n      </Host>\n    );\n  }\n}\n",":host {\n  @include reset-host;\n}\n\n:host .card {\n  display: flex;\n  flex-direction: column;\n  gap: rem(16);\n  align-items: center;\n  width: rem(210);\n  height: 100%;\n  padding: rem(10);\n  border: 1px solid $gray-800;\n  border-radius: rem(8);\n\n  @include mq('min', 'xs') {\n    width: rem(285);\n  }\n\n  @include mq('min', 'md') {\n    width: rem(330);\n  }\n}\n\n.image {\n  display: flex;\n}\n\n.content {\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: flex-start;\n  width: 100%;\n  max-height: 100%;\n  overflow: hidden;\n\n  .title {\n    margin-bottom: rem(10);\n    line-height: 1.1;\n  }\n\n  .text {\n    font-size: rem(12);\n  }\n}\n","import { Component, Host, h, Prop } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport type { BsImage } from '../../atoms/image/image';\nimport { TitleColor, TitleSize, TitleTag } from '../../atoms/title/title.types';\n\n/**\n * Product card component.\n */\n@Component({\n  tag: 'bs-product-card',\n  styleUrl: 'product-card.scss',\n  shadow: true,\n})\nexport class BsProductCard {\n  /** Props */\n  /**\n   * The product card title.\n   */\n  @Prop() cardTitle: string;\n\n  /**\n   * The cta label.\n   */\n  @Prop() cardText: string;\n\n  /**\n   * The product card image.\n   */\n  @Prop() cardImage: BsImage | string;\n\n  @Memoize('cardImage')\n  get parsedCardImage(): BsImage {\n    return parseIfString(this.cardImage);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"card\">\n          <div class=\"image\">\n            <bs-image {...this.parsedCardImage} caption=\"\" />\n          </div>\n          <div class=\"content\">\n            <bs-title\n              class=\"title\"\n              tag={TitleTag.Span}\n              size={TitleSize.Head4}\n              text={this.cardTitle}\n              color={TitleColor.Black}\n            />\n            <bs-text class=\"text\" text={this.cardText} />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"2PAAA,MAAMA,EAAe,03L,iXCYRC,EAAW,M,kDAOlBC,sBACF,OAAOC,EAAcC,KAAKC,U,CAK5BC,wBAAwBC,GACtB,MAAMC,EAASD,EAAMC,OAErBA,EAAOC,QAAUD,EAAOC,M,CAG1BC,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,WAASE,MAAM,sBAEXC,EAAQV,KAAKF,mBAAqBY,EAAQV,KAAKF,gBAAgBa,OAC/DJ,EAAA,YACEK,QAASZ,KAAKF,gBAAgBc,QAC9BC,MAAOb,KAAKF,gBAAgBe,MAC5BC,IAAKd,KAAKF,gBAAgBgB,IAC1BH,KAAMX,KAAKF,gBAAgBa,KAC3BI,KAAMf,KAAKF,gBAAgBiB,OAG/BR,EAAA,MAAIE,MAAM,YAAW,aAAY,2BAC/BF,EAAA,QAAMS,KAAK,qB,GA3BrBC,GADCC,EAAQ,c,8CClBX,MAAMC,EAAmB,i9M,MCUZC,EAAe,M,0LA8BsB,K,aAKpBC,EAASC,G,cAKPC,EAAUC,K,CAhCxCC,mBAAmBC,GAEjB,MAAMC,SAAiBD,IAAa,UAAYA,IAAa,GAE7D,GAAIC,EAAS,CACX,MAAM,IAAIC,MAAM,wE,EAkCZC,8BAA8BC,GACpC9B,KAAK+B,uBAAuBC,KAAKF,E,CAGnCxB,SACE,MAAM2B,EAAiBjC,KAAKkC,WAAWC,QAAQ,OAAQ,KAAKC,cAE5D,OACE7B,EAACC,EAAI,KACHD,EAAA,MAAIE,MAAO,kBAAkBT,KAAKqC,YAAcrC,KAAKK,OAAS,YAAc,MAE1EE,EAAA,UACEE,MAAM,oBACN6B,KAAK,SAAQ,gBACEL,EAAc,gBACdjC,KAAKqC,YAAcrC,KAAKK,QAAUL,KAAKK,OAAOkC,WAC7DC,GAAI,aAAaP,IACjBQ,QAAS,KACPzC,KAAK6B,8BAA8B7B,KAAKK,OAAO,EAEjDqC,SAAU1C,KAAKqC,WAAa,GAAK,EACjCM,UAAW3C,KAAKqC,YAEhB9B,EAAA,YACEO,IAAKd,KAAK4C,QACV7B,KAAMf,KAAK6C,SACXpC,MAAM,0BACNE,KAAMX,KAAK8C,qBAGZ9C,KAAKqC,YACJ9B,EAAA,yBACc,OACZE,MAAM,yBACNO,KAAM+B,EAASC,iBAKrBzC,EAAA,OACEE,MAAM,kBACNwC,KAAK,SAAQ,gBACEjD,KAAKK,QAAQkC,WAC5BC,GAAIP,GAEJ1B,EAAA,OAAKE,MAAM,2BACTF,EAAA,QAAMS,KAAK,yB,6ECvGzB,MAAMkC,EAAiB,w2M,iXCaVC,EAAa,M,mGAkBpBC,sBACF,OAAOrD,EAAcC,KAAKqD,U,CAG5B/C,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,OAAKE,MAAM,QACTF,EAAA,OAAKE,MAAM,SACTF,EAAA,WAAA+C,OAAAC,OAAA,GAAcvD,KAAKoD,gBAAe,CAAEI,QAAQ,OAE9CjD,EAAA,OAAKE,MAAM,WACTF,EAAA,YACEE,MAAM,QACNK,IAAKO,EAASoC,KACd1C,KAAMQ,EAAUmC,MAChB/C,KAAMX,KAAK2D,UACX9C,MAAO+C,EAAWC,QAEpBtD,EAAA,WAASE,MAAM,OAAOE,KAAMX,KAAK8D,a,GAnB3C7C,EAAA,CADCC,EAAQ,c"}