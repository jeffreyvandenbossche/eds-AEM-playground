{"file":"bs-experience-zone.entry.js","mappings":";;;;;AAAA,MAAM,iBAAiB,GAAG,6/NAA6/N;;;;;;;;;;;;MCa1gO,sBAAsB;;;kBAEN,KAAK;uBAED,CAAC;;;;EAShC,IAAI,wBAAwB;IAC1B,OAAO,aAAa,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;GAC/C;EAQD,IAAI,iBAAiB;IACnB,OAAO,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;GACxC;EAED,MAAM;IACJ,QACE,EAAC,IAAI,QACH,WAAK,KAAK,EAAC,iBAAiB,IAC1B,gBACE,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EACjC,GAAG,EAAE,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAC/B,IAAI,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,EACjC,OAAO,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EACvC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,GACnC,EACF,qBACG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,MACtD,uBACE,IAAI,EAAC,4BAA4B,EACjC,KAAK,EAAC,MAAM,EACZ,IAAI,EAAC,aAAa,EAClB,QAAQ,EAAC,mBAAmB,EAC5B,KAAK,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAE1E,+BACE,KAAK,EAAC,aAAa,EACnB,QAAQ,EAAE,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAC5D,SAAS,EAAE,KAAK,CAAC,UAAU,EAC3B,SAAS,EAAE,KAAK,CAAC,UAAU,EAC3B,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,oBAAoB,CAAC,KAAK,GAC7D,CACc,CACnB,CAAC,CACQ,CACR,CACD,EACP;GACH;;AA/CD;EADC,OAAO,CAAC,oBAAoB,CAAC;sEAG7B;AAQD;EADC,OAAO,CAAC,aAAa,CAAC;+DAGtB;;;;;","names":[],"sources":["./src/components/molecules/experience-zone/experience-zone.scss?tag=bs-experience-zone&encapsulation=shadow","./src/components/molecules/experience-zone/experience-zone.tsx"],"sourcesContent":["/* stylelint-disable property-no-vendor-prefix */\n:host {\n  @include reset-host;\n  width: 100%;\n  padding: 4rem 0 2rem;\n  overflow: hidden;\n}\n\n:host .experience-zone {\n  display: flex;\n  flex-direction: column;\n  gap: rem(32);\n}\n\n:host .teaser-navigation {\n  display: flex;\n  gap: rem(12);\n\n  @include mq('max', 'md') {\n    display: none;\n  }\n}\n\n:host .teaser-slider {\n  display: flex;\n  gap: rem(12);\n  margin: rem(32) 0;\n  overflow: auto;\n\n  @include mq('min', 'md') {\n    gap: rem(24);\n    padding-bottom: rem(32);\n    overflow: auto;\n  }\n\n  &::-webkit-scrollbar-track {\n    background-color: transparent;\n  }\n\n  &::-webkit-scrollbar {\n    height: 2px;\n    background-color: transparent;\n\n    @include mq('max', 'md') {\n      display: none;\n    }\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: $primary;\n  }\n}\n\n:host .navigation-button {\n  padding: rem(8);\n  font-size: rem(24);\n  border: 1px solid $gray-800;\n  border-radius: 50%;\n\n  &:focus {\n    background-color: $gray-800;\n    outline: 0;\n  }\n}\n\n:host .teaser-card {\n  flex-grow: 1;\n}\n\n:host .progress-bar {\n  width: 100%;\n  height: rem(2);\n}\n\n:host .progress-indicator {\n  width: 0;\n  height: 100%;\n  background-color: $primary;\n}\n\n:host .grow {\n  flex-grow: 1;\n}\n\n:host .click-action {\n  outline: 0;\n}\n","import { Component, Host, h, Prop, State } from '@stencil/core';\nimport { Memoize, parseIfString } from '@springbokagency/stencil-base';\nimport { BsTitle } from '../../atoms/title/title';\nimport { ExperienceZone, ExperienceZoneLayout } from './experience-zone.types';\n\n/**\n * Experience Zone teaser component.\n */\n@Component({\n  tag: 'bs-experience-zone',\n  styleUrl: 'experience-zone.scss',\n  shadow: true,\n})\nexport class BsExperienceZoneTeaser {\n  /** States */\n  @State() slides: boolean = false;\n\n  @State() activeIndex: number = 0;\n\n  /** Props */\n  /**\n   * The Experience Zone contract.\n   */\n  @Prop() experienceZoneData: ExperienceZone | string;\n\n  @Memoize('experienceZoneData')\n  get parsedExperienceZoneData(): ExperienceZone {\n    return parseIfString(this.experienceZoneData);\n  }\n\n  /**\n   * The Experience Zone Teaser title.\n   */\n  @Prop() teaserTitle: BsTitle | string;\n\n  @Memoize('teaserTitle')\n  get parsedTeaserTitle(): BsTitle {\n    return parseIfString(this.teaserTitle);\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"experience-zone\">\n          <bs-title\n            text={this.parsedTeaserTitle.text}\n            tag={this.parsedTeaserTitle.tag}\n            size={this.parsedTeaserTitle.size}\n            variant={this.parsedTeaserTitle.variant}\n            color={this.parsedTeaserTitle.color}\n          />\n          <bs-slider>\n            {this.parsedExperienceZoneData.stories.map((story, index) => (\n              <bs-click-action\n                name=\"open-experience-zone-modal\"\n                class=\"grow\"\n                slot=\"slider-item\"\n                tagClass=\"grow click-action\"\n                value={{ activeIndex: index, experienceZoneData: this.experienceZoneData }}\n              >\n                <bs-experience-zone-card\n                  class=\"teaser-card\"\n                  singular={this.parsedExperienceZoneData.stories.length === 1}\n                  cardTitle={story.storyTitle}\n                  cardImage={story.storyImage}\n                  video={story.screens[0].layout === ExperienceZoneLayout.Video}\n                />\n              </bs-click-action>\n            ))}\n          </bs-slider>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}